## File generated by the BNF Converter (bnfc 2.9.5).

# Makefile for building the parser and test program.

BUILD      := build
CODEGEN    := Parser
GHC        := ghc
GHC_OPTS   := -outputdir $(BUILD)
HAPPY      := happy
HAPPY_OPTS := --ghc --array --coerce --info
ALEX       := alex
ALEX_OPTS  := --ghc
RUN_BNFC ?= $(error BNFC overwrite disabled by default)
DISTCLEAN ?= $(error Distclean flag must be explicitly set)
USE_MAKE ?= $(error Compilation should be handled by cabal)
MAKEFLAGS += --warn-undefined-variables
MAKEFLAGS += --no-builtin-rules
.ONESHELL:

# List of goals not corresponding to file names.

.PHONY : all clean distclean test parser lexer main

# Default goal

all : main

# Rules for building

lexer : $(CODEGEN)/Lex.hs

parser : lexer $(CODEGEN)/Par.hs

$(BUILD) :
	mkdir -p $(BUILD)

$(addprefix $(CODEGEN)/,Lex.x Par.y Abs.hs Print.hs Test.hs) : | grammar.cf
	$(RUN_BNFC)
	cp grammar.cf $(@D)/Parser.cf
	bnfc --haskell --functor -d $(@D)/Parser.cf
	rm $(@D)/*.bak

$(CODEGEN)/Par.hs : $(CODEGEN)/Par.y
	$(HAPPY) $(HAPPY_OPTS) $<

$(CODEGEN)/Lex.hs : $(CODEGEN)/Lex.x
	$(ALEX) $(ALEX_OPTS) $<

$(BUILD)/Main : parser $(addprefix $(CODEGEN)/,Abs.hs Print.hs Test.hs) | $(BUILD)
	$(USE_MAKE)
	$(GHC) $(GHC_OPTS) Main.hs -o $@

main :
	cabal build main

demo : 
	cabal run main

test : 
	cabal run test

itest:
	cabal repl main --repl-options="-interactive-print=Text.Pretty.Simple.pPrint"

# Rules for cleaning generated files.

clean :
	rm -rf $(BUILD)
	rm -f $(CODEGEN)/Parser.cf $(CODEGEN)/Par.hs $(CODEGEN)/Lex.hs

distclean : clean
	$(DISTCLEAN)
	find $(CODEGEN) -maxdepth 1 -type f ! \( -name 'ASTBuilder.hs' \) -delete
